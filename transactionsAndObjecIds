transactions for mongoose are acheived with
npm i fawn
use transactions when performing multiple actions on multiple documents
to make sure they stay in sync

Objectids are 12 bytes, the first 4 bytes are a timestamp
		next 3 bytes are machine identifier
		next 2 bytes are process identifier
		next 3 bytes are a counter
		
The id is generated by MongoDB Driver
therefore you don't have to wait for MongoDB to generate it
therefore the database is more scalable

mongoose => DBDriver => mongoDb
try this:
const mongoose = require('mongoose');
const id = new mongoose.Types.ObjectId();
console.log (id)
this proves that it is not mongoDB 
console.log(id.getTimeStamp());

mongoose.Types.ObjectId.isValid(id)
will tell you if it is a valid mongo id

if a post request has an invalid object id
then the request will throw an error
cast to objectid failed ...
to handle it more gracefully, validate the objectId

npm i joi-objectid extends joi to more easily validate objectid
extend joi with
const Joi = require('joi');
require('joi-objectid')(Joi)
